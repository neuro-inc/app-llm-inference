{
  "$defs": {
    "ApoloSecret": {
      "properties": {
        "key": {
          "title": "Key",
          "type": "string"
        }
      },
      "required": [
        "key"
      ],
      "title": "ApoloSecret",
      "type": "object",
      "x-description": "Apolo Secret Configuration.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Secret",
      "x-type": "ApoloSecret"
    },
    "HuggingFaceModel": {
      "properties": {
        "model_hf_name": {
          "title": "Model Hf Name",
          "type": "string",
          "x-description": "The name of the Hugging Face model.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Hugging Face Model Name"
        },
        "hf_token": {
          "anyOf": [
            {
              "$ref": "#/$defs/ApoloSecret"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "x-description": "Provide a Hugging Face API token linked to an account with access to the model specified above. This token will be used to download model files from the Hugging Face Hub, including gated or private repositories where applicable.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Hugging Face Token"
        }
      },
      "required": [
        "model_hf_name"
      ],
      "title": "HuggingFaceModel",
      "type": "object",
      "x-description": "Configure the Hugging Face model. Ensure it is available on the Hugging Face Hub and provide an API token with access rights if the repository is gated.",
      "x-is-advanced-field": false,
      "x-meta-type": "integration",
      "x-title": "Hugging Face Model",
      "x-type": "HuggingFaceModel"
    },
    "LLMModelConfig": {
      "properties": {
        "context_max_tokens": {
          "anyOf": [
            {
              "exclusiveMinimum": 0,
              "type": "integer"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Context Max Tokens",
          "x-description": "Maximum total tokens (prompt + output) accepted in one request. If vLLM is started with --max-model-len, that value is used. Otherwise it is derived from the model config (after RoPE scaling) and capped by the tokenizer's model_max_length when present. Used to compute max generated tokens as: context_max_tokens \u2212 prompt_tokens.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Effective Context Size (tokens)"
        }
      },
      "title": "LLMModelConfig",
      "type": "object",
      "x-description": "Metadata extracted from Hugging Face configs and deployment settings to describe an LLM's context limits.",
      "x-is-advanced-field": false,
      "x-meta-type": "integration",
      "x-title": "LLM Model Configuration",
      "x-type": "LLMModelConfig"
    },
    "OpenAICompatChatAPI": {
      "properties": {
        "host": {
          "title": "Host",
          "type": "string",
          "x-description": "The hostname of the HTTP endpoint.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Hostname"
        },
        "port": {
          "default": 80,
          "exclusiveMinimum": 0,
          "title": "Port",
          "type": "integer",
          "x-description": "The port of the HTTP endpoint.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Port"
        },
        "protocol": {
          "default": "http",
          "title": "Protocol",
          "type": "string",
          "x-description": "The protocol to use, e.g., http or https.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Protocol"
        },
        "timeout": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": 30.0,
          "title": "Timeout",
          "x-description": "Connection timeout in seconds.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Connection Timeout"
        },
        "base_path": {
          "default": "/",
          "title": "Base Path",
          "type": "string"
        },
        "api_type": {
          "const": "rest",
          "default": "rest",
          "title": "Api Type",
          "type": "string"
        },
        "api_base_path": {
          "default": "/v1",
          "title": "Api Base Path",
          "type": "string"
        },
        "openai_api_type": {
          "const": "chat",
          "default": "chat",
          "title": "Openai Api Type",
          "type": "string"
        },
        "endpoint_url": {
          "const": "/v1/chat",
          "default": "/v1/chat",
          "title": "Endpoint Url",
          "type": "string"
        },
        "hf_model": {
          "anyOf": [
            {
              "$ref": "#/$defs/HuggingFaceModel"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "x-description": "Configure the Hugging Face model. Ensure it is available on the Hugging Face Hub and provide an API token with access rights if the repository is gated.",
          "x-is-advanced-field": false,
          "x-meta-type": "integration",
          "x-title": "Hugging Face Model"
        }
      },
      "required": [
        "host"
      ],
      "title": "OpenAICompatChatAPI",
      "type": "object",
      "x-description": "Configuration for OpenAI compatible chat API.",
      "x-is-advanced-field": false,
      "x-meta-type": "integration",
      "x-title": "OpenAI Compatible Chat API",
      "x-type": "OpenAICompatChatAPI"
    },
    "OpenAICompatEmbeddingsAPI": {
      "properties": {
        "host": {
          "title": "Host",
          "type": "string",
          "x-description": "The hostname of the HTTP endpoint.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Hostname"
        },
        "port": {
          "default": 80,
          "exclusiveMinimum": 0,
          "title": "Port",
          "type": "integer",
          "x-description": "The port of the HTTP endpoint.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Port"
        },
        "protocol": {
          "default": "http",
          "title": "Protocol",
          "type": "string",
          "x-description": "The protocol to use, e.g., http or https.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Protocol"
        },
        "timeout": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": 30.0,
          "title": "Timeout",
          "x-description": "Connection timeout in seconds.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Connection Timeout"
        },
        "base_path": {
          "default": "/",
          "title": "Base Path",
          "type": "string"
        },
        "api_type": {
          "const": "rest",
          "default": "rest",
          "title": "Api Type",
          "type": "string"
        },
        "api_base_path": {
          "default": "/v1",
          "title": "Api Base Path",
          "type": "string"
        },
        "openai_api_type": {
          "const": "embeddings",
          "default": "embeddings",
          "title": "Openai Api Type",
          "type": "string"
        },
        "endpoint_url": {
          "const": "/v1/embeddings",
          "default": "/v1/embeddings",
          "title": "Endpoint Url",
          "type": "string"
        },
        "hf_model": {
          "anyOf": [
            {
              "$ref": "#/$defs/HuggingFaceModel"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "x-description": "Configure the Hugging Face model. Ensure it is available on the Hugging Face Hub and provide an API token with access rights if the repository is gated.",
          "x-is-advanced-field": false,
          "x-meta-type": "integration",
          "x-title": "Hugging Face Model"
        }
      },
      "required": [
        "host"
      ],
      "title": "OpenAICompatEmbeddingsAPI",
      "type": "object",
      "x-description": "Configuration for OpenAI compatible embeddings API.",
      "x-is-advanced-field": false,
      "x-meta-type": "integration",
      "x-title": "OpenAI Compatible Embeddings API",
      "x-type": "OpenAICompatEmbeddingsAPI"
    },
    "ServiceAPI_WebApp_": {
      "properties": {
        "internal_url": {
          "anyOf": [
            {
              "$ref": "#/$defs/WebApp"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "x-description": "Internal URL to access the service. This route is not protected by platform authorization and only workloads from the same project can access it.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Internal URL"
        },
        "external_url": {
          "anyOf": [
            {
              "$ref": "#/$defs/WebApp"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "x-description": "External URL for accessing the service from outside the cluster. This route might be secured by platform authorization and is accessible from any network with a valid platform authorization token that has appropriate permissions.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "External URL"
        }
      },
      "title": "ServiceAPI[WebApp]",
      "type": "object",
      "x-description": "Service APIs URLs.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Service APIs",
      "x-type": "ServiceAPI[GrpcAPI]"
    },
    "WebApp": {
      "properties": {
        "host": {
          "title": "Host",
          "type": "string",
          "x-description": "The hostname of the HTTP endpoint.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Hostname"
        },
        "port": {
          "default": 80,
          "exclusiveMinimum": 0,
          "title": "Port",
          "type": "integer",
          "x-description": "The port of the HTTP endpoint.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Port"
        },
        "protocol": {
          "default": "http",
          "title": "Protocol",
          "type": "string",
          "x-description": "The protocol to use, e.g., http or https.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Protocol"
        },
        "timeout": {
          "anyOf": [
            {
              "type": "number"
            },
            {
              "type": "null"
            }
          ],
          "default": 30.0,
          "title": "Timeout",
          "x-description": "Connection timeout in seconds.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Connection Timeout"
        },
        "base_path": {
          "default": "/",
          "title": "Base Path",
          "type": "string"
        },
        "api_type": {
          "const": "webapp",
          "default": "webapp",
          "title": "Api Type",
          "type": "string"
        }
      },
      "required": [
        "host"
      ],
      "title": "WebApp",
      "type": "object",
      "x-description": "HTTP API Configuration.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "HTTP API",
      "x-type": "OpenAICompatibleEmbeddingsRestAPI"
    }
  },
  "properties": {
    "app_url": {
      "anyOf": [
        {
          "$ref": "#/$defs/ServiceAPI_WebApp_"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "The main application URL for accessing the service. This is the primary endpoint users should use to access the application.",
      "title": "Application URL"
    },
    "chat_internal_api": {
      "anyOf": [
        {
          "$ref": "#/$defs/OpenAICompatChatAPI"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "x-description": "Internal Chat API compatible with OpenAI standard for seamless integration.",
      "x-is-advanced-field": false,
      "x-meta-type": "integration",
      "x-title": "Internal Chat API"
    },
    "chat_external_api": {
      "anyOf": [
        {
          "$ref": "#/$defs/OpenAICompatChatAPI"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "x-description": "External Chat API compatible with OpenAI standard.",
      "x-is-advanced-field": false,
      "x-meta-type": "integration",
      "x-title": "External Chat API"
    },
    "embeddings_internal_api": {
      "anyOf": [
        {
          "$ref": "#/$defs/OpenAICompatEmbeddingsAPI"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "x-description": "Internal Embeddings API compatible with OpenAI standard for seamless integration.",
      "x-is-advanced-field": false,
      "x-meta-type": "integration",
      "x-title": "Internal Embeddings API"
    },
    "embeddings_external_api": {
      "anyOf": [
        {
          "$ref": "#/$defs/OpenAICompatEmbeddingsAPI"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "x-description": "External Embeddings API compatible with OpenAI standard.",
      "x-is-advanced-field": false,
      "x-meta-type": "integration",
      "x-title": "External Embeddings API"
    },
    "hugging_face_model": {
      "$ref": "#/$defs/HuggingFaceModel"
    },
    "llm_model_config": {
      "anyOf": [
        {
          "$ref": "#/$defs/LLMModelConfig"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "x-description": "Configuration details of the deployed LLM model.",
      "x-is-advanced-field": false,
      "x-meta-type": "integration",
      "x-title": "LLM Model Config"
    },
    "tokenizer_hf_name": {
      "default": "",
      "title": "Tokenizer Hf Name",
      "type": "string",
      "x-description": "Set the name of the tokenizer associated with the Hugging Face model.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Hugging Face Tokenizer Name"
    },
    "server_extra_args": {
      "items": {
        "type": "string"
      },
      "title": "Server Extra Args",
      "type": "array",
      "x-description": "Configure extra arguments to pass to the server (see VLLM doc, e.g. --max-model-len=131072).",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Server Extra Arguments"
    },
    "llm_api_key": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "title": "Llm Api Key",
      "x-description": "LLM Key for the API",
      "x-is-advanced-field": false,
      "x-meta-type": "integration",
      "x-title": "LLM Api Key"
    }
  },
  "required": [
    "hugging_face_model"
  ],
  "title": "VLLMInferenceOutputs",
  "type": "object"
}
