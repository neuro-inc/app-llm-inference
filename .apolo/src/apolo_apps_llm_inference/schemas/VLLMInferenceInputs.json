{
  "$defs": {
    "ApoloAuth": {
      "properties": {
        "type": {
          "const": "apolo_auth",
          "default": "apolo_auth",
          "description": "Authentication type identifier",
          "title": "Type",
          "type": "string"
        }
      },
      "title": "ApoloAuth",
      "type": "object",
      "x-description": "Use Apolo platform's built-in authentication and authorization. Requires authenticated user credentials with appropriate permissions.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Apolo Platform Authentication",
      "x-type": "ApoloAuth"
    },
    "ApoloFilesPath": {
      "properties": {
        "path": {
          "title": "Path",
          "type": "string",
          "x-description": "Provide the Apolo Storage path starting with `storage:` to locate your files.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Storage Path"
        }
      },
      "required": [
        "path"
      ],
      "title": "ApoloFilesPath",
      "type": "object",
      "x-description": "Specify the path within the Apolo Files application to read from or write to.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Apolo Files Path",
      "x-type": "ApoloFilesFile"
    },
    "ApoloSecret": {
      "properties": {
        "key": {
          "title": "Key",
          "type": "string"
        }
      },
      "required": [
        "key"
      ],
      "title": "ApoloSecret",
      "type": "object",
      "x-description": "Apolo Secret Configuration.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Secret",
      "x-type": "ApoloSecret"
    },
    "AuthIngressMiddleware": {
      "properties": {
        "name": {
          "pattern": "^platform",
          "title": "Name",
          "type": "string",
          "x-description": "Name of the authentication middleware (with namespace) to apply to ingress traffic.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Middleware Name"
        }
      },
      "required": [
        "name"
      ],
      "title": "AuthIngressMiddleware",
      "type": "object",
      "x-description": "Configure authentication middleware for ingress traffic.",
      "x-is-advanced-field": false,
      "x-meta-type": "integration",
      "x-title": "Authentication Ingress Middleware",
      "x-type": "AuthIngressMiddleware"
    },
    "AutoscalingKedaHTTP": {
      "properties": {
        "min_replicas": {
          "default": 1,
          "minimum": 0,
          "title": "Min Replicas",
          "type": "integer",
          "x-description": "Set the minimum number of replicas for your deployment.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Minimum Replicas"
        },
        "max_replicas": {
          "default": 5,
          "exclusiveMinimum": 0,
          "title": "Max Replicas",
          "type": "integer",
          "x-description": "Limit the maximum number of replicas for your deployment.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Maximum Replicas"
        },
        "scaledown_period": {
          "default": 300,
          "exclusiveMinimum": 0,
          "title": "Scaledown Period",
          "type": "integer",
          "x-description": "Time in seconds to wait before scaling down.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Scaledown Period"
        },
        "request_rate": {
          "$ref": "#/$defs/RequestRateConfig",
          "default": {
            "granularity": 1,
            "target_value": 100,
            "window_size": 60,
            "__type__": "RequestRateConfig"
          }
        }
      },
      "title": "AutoscalingKedaHTTP",
      "type": "object",
      "x-description": "Autoscaling configuration for Horizontal Pod Autoscaler.",
      "x-is-advanced-field": true,
      "x-meta-type": "inline",
      "x-title": "Autoscaling HPA",
      "x-type": "AutoscalingKedaHTTP"
    },
    "ContainerImage": {
      "properties": {
        "repository": {
          "title": "Repository",
          "type": "string",
          "x-description": "Choose a repository for the container image.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Container Image Repository"
        },
        "tag": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "title": "Tag",
          "x-description": "Choose a tag for the container image.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Container Image Tag"
        },
        "dockerconfigjson": {
          "anyOf": [
            {
              "$ref": "#/$defs/DockerConfigModel"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "x-description": "ImagePullSecrets for DockerHub",
          "x-is-advanced-field": false,
          "x-meta-type": "integration",
          "x-title": "ImagePullSecrets for DockerHub"
        },
        "pull_policy": {
          "$ref": "#/$defs/ContainerImagePullPolicy",
          "default": "IfNotPresent",
          "x-description": "Specify the pull policy for the container image.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Container Image Pull Policy"
        }
      },
      "required": [
        "repository"
      ],
      "title": "ContainerImage",
      "type": "object",
      "x-description": "Container image to be used in application",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Container Image",
      "x-type": "ContainerImage"
    },
    "ContainerImagePullPolicy": {
      "enum": [
        "Always",
        "Never",
        "IfNotPresent"
      ],
      "title": "ContainerImagePullPolicy",
      "type": "string"
    },
    "CustomAuth": {
      "properties": {
        "type": {
          "const": "custom_auth",
          "default": "custom_auth",
          "description": "Authentication type identifier",
          "title": "Type",
          "type": "string"
        },
        "middleware": {
          "$ref": "#/$defs/AuthIngressMiddleware",
          "x-description": "Custom authentication middleware configuration.",
          "x-title": "Authentication Middleware"
        }
      },
      "required": [
        "middleware"
      ],
      "title": "CustomAuth",
      "type": "object",
      "x-description": "Use a custom authentication middleware for this ingress. Allows integration with custom authentication providers.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Custom Authentication",
      "x-type": "CustomAuth"
    },
    "DockerConfigModel": {
      "properties": {
        "filecontents": {
          "title": "Filecontents",
          "type": "string",
          "x-description": "The contents of the Docker config file.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Docker Config File Contents"
        }
      },
      "required": [
        "filecontents"
      ],
      "title": "DockerConfigModel",
      "type": "object",
      "x-description": "Docker configuration content.",
      "x-is-advanced-field": false,
      "x-meta-type": "integration",
      "x-title": "Docker Config",
      "x-type": "DockerConfigModel"
    },
    "Env": {
      "properties": {
        "name": {
          "title": "Name",
          "type": "string",
          "x-description": "Specify the name of the environment variable to inject into the container.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Variable Name"
        },
        "value": {
          "anyOf": [
            {
              "type": "string",
              "x-description": "Specify the value of the environment variable.",
              "x-is-advanced-field": false,
              "x-meta-type": "inline",
              "x-title": "String variable Value"
            },
            {
              "$ref": "#/$defs/ApoloSecret"
            }
          ],
          "default": "",
          "title": "Value",
          "x-description": "Specify the value of the environment variable.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Variable Value"
        }
      },
      "required": [
        "name"
      ],
      "title": "Env",
      "type": "object",
      "x-description": "K8S container env var.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Env",
      "x-type": "Env"
    },
    "HuggingFaceCache": {
      "properties": {
        "files_path": {
          "$ref": "#/$defs/ApoloFilesPath",
          "default": {
            "path": "storage:.apps/hugging-face-cache",
            "__type__": "ApoloFilesPath"
          },
          "x-description": "The path to the Apolo Files directory where Hugging Face artifacts are cached.",
          "x-title": "Files Path"
        }
      },
      "title": "HuggingFaceCache",
      "type": "object",
      "x-description": "Configuration for the Hugging Face cache.",
      "x-is-advanced-field": false,
      "x-meta-type": "integration",
      "x-title": "Hugging Face Cache",
      "x-type": "HuggingFaceCache"
    },
    "HuggingFaceModel": {
      "properties": {
        "model_hf_name": {
          "title": "Model Hf Name",
          "type": "string",
          "x-description": "The name of the Hugging Face model.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Hugging Face Model Name"
        },
        "hf_token": {
          "anyOf": [
            {
              "$ref": "#/$defs/HuggingFaceToken"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "x-description": "Provide a Hugging Face API token linked to an account with access to the model specified above. This token will be used to download model files from the Hugging Face Hub, including gated or private repositories where applicable.",
          "x-is-advanced-field": false,
          "x-meta-type": "integration",
          "x-title": "Hugging Face Token"
        },
        "hf_cache": {
          "anyOf": [
            {
              "$ref": "#/$defs/HuggingFaceCache"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "x-description": "Enables caching of model files to reduce redundant downloads and speed up load times.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Model Cache"
        }
      },
      "required": [
        "model_hf_name"
      ],
      "title": "HuggingFaceModel",
      "type": "object",
      "x-description": "Configure the Hugging Face model. Ensure it is available on the Hugging Face Hub and provide an API token with access rights if the repository is gated.",
      "x-is-advanced-field": false,
      "x-meta-type": "integration",
      "x-title": "Hugging Face Model",
      "x-type": "HuggingFaceModel"
    },
    "HuggingFaceToken": {
      "properties": {
        "token_name": {
          "minLength": 0,
          "title": "Token Name",
          "type": "string",
          "x-description": "The name of the Hugging Face token.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Token Name"
        },
        "token": {
          "$ref": "#/$defs/ApoloSecret",
          "x-description": "The Hugging Face API token used to access models.",
          "x-title": "Hugging Face Token"
        }
      },
      "required": [
        "token_name",
        "token"
      ],
      "title": "HuggingFaceToken",
      "type": "object",
      "x-description": "Provide a Hugging Face API token linked to an account with access to the model specified above. This token will be used to download model files from the Hugging Face Hub, including gated or private repositories where applicable.",
      "x-is-advanced-field": false,
      "x-meta-type": "integration",
      "x-title": "Hugging Face Token",
      "x-type": "HuggingFaceToken"
    },
    "IngressHttp": {
      "properties": {
        "auth": {
          "anyOf": [
            {
              "$ref": "#/$defs/ApoloAuth"
            },
            {
              "$ref": "#/$defs/NoAuth"
            },
            {
              "$ref": "#/$defs/CustomAuth"
            }
          ],
          "title": "Auth",
          "x-description": "Configure authentication for this ingress. Choose Apolo platform authentication, custom middleware, or no authentication.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Authentication"
        }
      },
      "title": "IngressHttp",
      "type": "object",
      "x-description": "Enable access to your application over the internet using HTTPS.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Enable HTTP Ingress",
      "x-type": "IngressHttp"
    },
    "NoAuth": {
      "properties": {
        "type": {
          "const": "no_auth",
          "default": "no_auth",
          "description": "Authentication type identifier",
          "title": "Type",
          "type": "string"
        }
      },
      "title": "NoAuth",
      "type": "object",
      "x-description": "Disable authentication for this ingress. The application will be publicly accessible without any authentication.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "No Authentication",
      "x-type": "NoAuth"
    },
    "Preset": {
      "properties": {
        "name": {
          "title": "Name",
          "type": "string",
          "x-description": "The name of the preset.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Resource Preset"
        }
      },
      "required": [
        "name"
      ],
      "title": "Preset",
      "type": "object",
      "x-description": "Select the resource preset used per service replica.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Resource Preset",
      "x-type": "Preset"
    },
    "RequestRateConfig": {
      "properties": {
        "granularity": {
          "default": 1,
          "exclusiveMinimum": 0,
          "title": "Granularity",
          "type": "integer",
          "x-description": "Time in seconds to calculate request rate.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Granularity"
        },
        "target_value": {
          "default": 100,
          "exclusiveMinimum": 0,
          "title": "Target Value",
          "type": "integer",
          "x-description": "Target request rate per second for autoscaling.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Target Value"
        },
        "window_size": {
          "default": 60,
          "exclusiveMinimum": 0,
          "title": "Window Size",
          "type": "integer",
          "x-description": "Time in seconds to consider for request rate calculation.",
          "x-is-advanced-field": false,
          "x-meta-type": "inline",
          "x-title": "Window Size"
        }
      },
      "title": "RequestRateConfig",
      "type": "object",
      "x-description": "Configuration for request rate based autoscaling.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Request Rate Configuration",
      "x-type": "RequestRateConfig"
    }
  },
  "properties": {
    "preset": {
      "$ref": "#/$defs/Preset"
    },
    "ingress_http": {
      "anyOf": [
        {
          "$ref": "#/$defs/IngressHttp"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "x-description": "Enable access to your application over the internet using HTTPS.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Public HTTP Ingress"
    },
    "hugging_face_model": {
      "$ref": "#/$defs/HuggingFaceModel",
      "x-meta-type": "inline"
    },
    "tokenizer_hf_name": {
      "default": "",
      "title": "Tokenizer Hf Name",
      "type": "string",
      "x-description": "Set the name of the tokenizer associated with the Hugging Face model.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Hugging Face Tokenizer Name"
    },
    "server_extra_args": {
      "items": {
        "type": "string"
      },
      "title": "Server Extra Args",
      "type": "array",
      "x-description": "Configure extra arguments to pass to the server (see VLLM doc, e.g. --max-model-len=131072).",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Server Extra Arguments"
    },
    "extra_env_vars": {
      "items": {
        "$ref": "#/$defs/Env"
      },
      "title": "Extra Env Vars",
      "type": "array",
      "x-description": "Additional environment variables to inject into the container. These will override any existing environment variables with the same name.",
      "x-is-advanced-field": false,
      "x-meta-type": "inline",
      "x-title": "Extra Environment Variables"
    },
    "http_autoscaling": {
      "anyOf": [
        {
          "$ref": "#/$defs/AutoscalingKedaHTTP"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "x-description": "Configure autoscaling based on HTTP request rate. If you enable this, please ensure that cache config is enabled as well.",
      "x-is-advanced-field": true,
      "x-meta-type": "inline",
      "x-title": "HTTP Autoscaling"
    },
    "docker_image_config": {
      "anyOf": [
        {
          "$ref": "#/$defs/ContainerImage"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "x-description": "Override container image for vLLM.",
      "x-is-advanced-field": true,
      "x-meta-type": "inline",
      "x-title": "Docker Image Config"
    }
  },
  "required": [
    "preset",
    "hugging_face_model"
  ],
  "title": "VLLMInferenceInputs",
  "type": "object"
}
