apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app.labels" . | nindent 8 }}
        {{- include "app.apoloPodLabels" . | nindent 8 }}
    spec:
      {{- with .Values.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.modelDownload.initEnabled }}
      initContainers:
        - name: download-model
          image: "{{ .Values.modelDownload.image.repository }}:{{ .Values.modelDownload.image.tag }}"
          volumeMounts:
            {{- if .Values.cache.enabled }}
            - name: huggingface-cache
              mountPath: /root/.cache/huggingface
            {{- end }}
            {{- range .Values.volumes }}
            - name: {{ .pvcName }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .mountReadOnly }}
              subPath: {{ .volumeSubPath }}
            {{- end }}
          env:
          {{- range $k, $v := .Values.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
          {{- end }}
          command: ["huggingface-cli"]
          args:
            - download
            - --resume-download
            - --repo-type=model
            {{- if or .Values.llm.modelRevision .Values.model.modelRevision }}
            - --revision={{ or .Values.llm.modelRevision .Values.model.modelRevision }}
            {{- end }}
            - "{{ or .Values.llm.modelHFName .Values.model.modelHFName }}"
      {{- end }}
      containers:
        - name: health-check
          image: python:3.9-slim
          command: [ "/bin/sh", "-c" ]
          args:
            - |
              pip install flask
              python3 -c '
              import flask
              app = flask.Flask(__name__)

              @app.route("/health")
              def health():
                  return "OK", 200

              if __name__ == "__main__":
                  app.run(host="0.0.0.0", port=8000)
              '
{{/*      ports:*/}}
{{/*          - containerPort: 8000*/}}
{{/*      resources:*/}}
{{/*        limits:*/}}
{{/*          cpu: 100m*/}}
{{/*          memory: 128Mi*/}}
{{/*        requests:*/}}
{{/*          cpu: 50m*/}}
{{/*          memory: 64Mi*/}}
{{/*        - name: {{ .Chart.Name }}*/}}
{{/*          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"*/}}
{{/*          imagePullPolicy: {{ .Values.image.pullPolicy }}*/}}
{{/*          ports:*/}}
{{/*            - name: http*/}}
{{/*              containerPort: {{ .Values.service.port }}*/}}
{{/*              protocol: TCP*/}}
{{/*          livenessProbe:*/}}
{{/*            initialDelaySeconds: {{ .Values.healthChecksDelay }}*/}}
{{/*            httpGet:*/}}
{{/*              path: /health*/}}
{{/*              port: http*/}}
{{/*          readinessProbe:*/}}
{{/*            initialDelaySeconds: {{ .Values.healthChecksDelay }}*/}}
{{/*            httpGet:*/}}
{{/*              path: /health*/}}
{{/*              port: http*/}}
{{/*          resources:*/}}
{{/*            {{- toYaml .Values.resources | nindent 12 }}*/}}
{{/*          volumeMounts:*/}}
{{/*            - mountPath: /dev/shm*/}}
{{/*              name: dshm*/}}
{{/*            {{- if .Values.cache.enabled }}*/}}
{{/*            - name: huggingface-cache*/}}
{{/*              mountPath: /root/.cache/huggingface*/}}
{{/*            {{- end }}*/}}
{{/*            {{- range .Values.PVCVolumes }}*/}}
{{/*            - name: {{ .pvcName }}*/}}
{{/*              mountPath: {{ .mountPath }}*/}}
{{/*              readOnly: {{ .mountReadOnly }}*/}}
{{/*              subPath: {{ .volumeSubPath }}*/}}
{{/*            {{- end }}*/}}
{{/*          env:*/}}
{{/*          {{- range $k, $v := .Values.env }}*/}}
{{/*            - name: {{ $k }}*/}}
{{/*              value: {{ $v | quote }}*/}}
{{/*          {{- end }}*/}}
{{/*          args:*/}}
{{/*            - --host=0.0.0.0*/}}
{{/*            - --port={{ .Values.service.port }}*/}}
{{/*            - --model={{ or .Values.llm.modelHFName .Values.model.modelHFName }}*/}}
{{/*            {{- if or .Values.llm.modelRevision .Values.model.modelRevision }}*/}}
{{/*            - --code-revision={{ or .Values.llm.modelRevision .Values.model.modelRevision }}*/}}
{{/*            {{- end }}*/}}
{{/*            - --tokenizer={{ .Values.llm.tokenizerHFName }}*/}}
{{/*            {{- if or .Values.llm.tokenizerRevision .Values.model.tokenizerRevision }}*/}}
{{/*            - --tokenizer-revision={{ or .Values.llm.tokenizerRevision .Values.model.tokenizerRevision }}*/}}
{{/*            {{- end }}*/}}
{{/*          {{- with .Values.serverExtraArgs -}}*/}}
{{/*          {{- toYaml . | nindent 12 }}*/}}
{{/*          {{- end }}*/}}
      {{- if or .Values.volumes .Values.cache.enabled }}
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
      {{- if .Values.cache.enabled }}
        - name: huggingface-cache
          emptyDir:
            sizeLimit: {{ .Values.cache.sizeLimit }}
      {{- end }}
      {{- range .Values.PVCVolumes }}
        - name: {{ .pvcName }}
          persistentVolumeClaim:
            claimName: {{ .pvcName }}
      {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
