apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "app.labels" . | nindent 8 }}
        {{- include "app.apoloPodLabels" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.image.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- if .Values.modelDownload.initEnabled }}
      initContainers:
        - name: download-model
          image: "{{ .Values.modelDownload.image.repository }}:{{ .Values.modelDownload.image.tag }}"
          volumeMounts:
            {{- if .Values.cache.enabled }}
            - name: huggingface-cache
              mountPath: /root/.cache/huggingface
            {{- end }}
            {{- range .Values.volumes }}
            - name: {{ .pvcName }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .mountReadOnly }}
              subPath: {{ .volumeSubPath }}
            {{- end }}
          env:
            {{- range $k, $v := .Values.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
            {{- end }}
          command: ["huggingface-cli"]
          args:
            - download
            - --resume-download
            - --repo-type=model
            {{- if or .Values.llm.modelRevision .Values.model.modelRevision }}
            - --revision={{ or .Values.llm.modelRevision .Values.model.modelRevision }}
            {{- end }}
            - "{{ or .Values.llm.modelHFName .Values.model.modelHFName }}"
      {{- end }}

      containers:
        - name: {{ .Chart.Name }}

          # Select the image based on gpuProvider
          image: "{{- if eq .Values.gpuProvider "amd" -}}
{{ .Values.amdImage.repository }}:{{ .Values.amdImage.tag }}
{{- else -}}
{{ .Values.nvidiaImage.repository }}:{{ .Values.nvidiaImage.tag }}
{{- end }}"

          imagePullPolicy: "{{- if eq .Values.gpuProvider "amd" -}}
{{ .Values.amdImage.pullPolicy }}
{{- else -}}
{{ .Values.nvidiaImage.pullPolicy }}
{{- end }}"

          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP

          livenessProbe:
            initialDelaySeconds: {{ .Values.healthChecksDelay }}
            httpGet:
              path: /health
              port: http

          readinessProbe:
            initialDelaySeconds: {{ .Values.healthChecksDelay }}
            httpGet:
              path: /health
              port: http

          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          volumeMounts:
            - name: dshm
              mountPath: /dev/shm
            {{- if .Values.cache.enabled }}
            - name: huggingface-cache
              mountPath: /root/.cache/huggingface
            {{- end }}
            {{- range .Values.PVCVolumes }}
            - name: {{ .pvcName }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .mountReadOnly }}
              subPath: {{ .volumeSubPath }}
            {{- end }}

          env:
            # Common environment variables
            {{- range $k, $v := .Values.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
            {{- end }}

            # AMD-specific variables if gpuProvider=amd
            {{- if eq .Values.gpuProvider "amd" }}
              {{- range $k, $v := .Values.envAmd }}
            - name: {{ $k }}
              value: {{ $v | quote }}
              {{- end }}
            {{- end }}

            # Nvidia-specific variables if gpuProvider=nvidia
            {{- if eq .Values.gpuProvider "nvidia" }}
              {{- range $k, $v := .Values.envNvidia }}
            - name: {{ $k }}
              value: {{ $v | quote }}
              {{- end }}
            {{- end }}

          command:
            - vllm
            - serve

          args:
            # Model from .Values
            - {{ or .Values.llm.modelHFName .Values.model.modelHFName }}

            # Basic "optimal" defaults
            - --host=0.0.0.0
            - --port={{ .Values.service.port }}
            - --max-model-len=2048
            - --enforce-eager
            - --dtype=half
            - --tensor-parallel-size=2
            - --trust-remote-code
            - --gpu-memory-utilization=0.9

            # Optional code/model revisions
            {{- if or .Values.llm.modelRevision .Values.model.modelRevision }}
            - --code-revision={{ or .Values.llm.modelRevision .Values.model.modelRevision }}
            {{- end }}
            {{- if .Values.llm.tokenizerHFName }}
            - --tokenizer={{ .Values.llm.tokenizerHFName }}
            {{- end }}
            {{- if or .Values.llm.tokenizerRevision .Values.model.tokenizerRevision }}
            - --tokenizer-revision={{ or .Values.llm.tokenizerRevision .Values.model.tokenizerRevision }}
            {{- end }}

            # Additional user-specified args
            {{- range .Values.serverExtraArgs }}
            - {{ . }}
            {{- end }}

      # Volumes
      volumes:
        - name: dshm
          emptyDir:
            medium: Memory
        {{- if .Values.cache.enabled }}
        - name: huggingface-cache
          emptyDir:
            sizeLimit: {{ .Values.cache.sizeLimit }}
        {{- end }}
        {{- range .Values.PVCVolumes }}
        - name: {{ .pvcName }}
          persistentVolumeClaim:
            claimName: {{ .pvcName }}
        {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
